// Generated by Dagger (https://dagger.dev).
package com.ricardocenteno.alltrailsplaces.di;

import com.ricardocenteno.alltrailsplaces.model.network.PlacesService;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class NetworkModule_ProvidePlacesServiceFactory implements Factory<PlacesService> {
  @Override
  public PlacesService get() {
    return providePlacesService();
  }

  public static NetworkModule_ProvidePlacesServiceFactory create() {
    return InstanceHolder.INSTANCE;
  }

  public static PlacesService providePlacesService() {
    return Preconditions.checkNotNullFromProvides(NetworkModule.INSTANCE.providePlacesService());
  }

  private static final class InstanceHolder {
    private static final NetworkModule_ProvidePlacesServiceFactory INSTANCE = new NetworkModule_ProvidePlacesServiceFactory();
  }
}
