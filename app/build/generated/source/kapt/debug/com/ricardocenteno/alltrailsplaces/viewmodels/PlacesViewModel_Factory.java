// Generated by Dagger (https://dagger.dev).
package com.ricardocenteno.alltrailsplaces.viewmodels;

import com.ricardocenteno.alltrailsplaces.model.repository.PlaceRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class PlacesViewModel_Factory implements Factory<PlacesViewModel> {
  private final Provider<PlaceRepository> repositoryProvider;

  public PlacesViewModel_Factory(Provider<PlaceRepository> repositoryProvider) {
    this.repositoryProvider = repositoryProvider;
  }

  @Override
  public PlacesViewModel get() {
    return newInstance(repositoryProvider.get());
  }

  public static PlacesViewModel_Factory create(Provider<PlaceRepository> repositoryProvider) {
    return new PlacesViewModel_Factory(repositoryProvider);
  }

  public static PlacesViewModel newInstance(PlaceRepository repository) {
    return new PlacesViewModel(repository);
  }
}
